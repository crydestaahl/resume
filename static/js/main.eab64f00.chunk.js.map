{"version":3,"sources":["jag.png","Header.js","Main.js","CV.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","styled","div","_templateObject","ul","_templateObject2","li","_templateObject3","Header","MainWrap","Main_templateObject","Main","react_default","a","createElement","className","id","src","jag","alt","Resume","CV_templateObject","Cv","ContactWrap","Contact_templateObject","Contact","href","App","src_Main","CV","src_Contact","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eab64f00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jag.1a5977e9.png\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst NavWrap = styled.div`\n    display: grid; \n    grid-template-columns: 1fr 1fr 1fr;\n    width: 100%; \n    position: fixed; \n    background: white; \n    z-index: 900;\n    -webkit-box-shadow: 4px 3px 19px -5px rgba(130,130,130,1);\n    -moz-box-shadow: 4px 3px 19px -5px rgba(130,130,130,1);\n    box-shadow: 4px 3px 19px -5px rgba(130,130,130,1);\n\n     @media screen and (max-width: 1069px) {\n        display: none;\n        text-align: center;\n        width: 100%;\n        align-items: center;\n    }\n`\nconst Navbar = styled.ul`\n    grid-column-start: 2;\n    grid-column-end: 2; \n    list-style: none;\n\n`\n\nconst Li = styled.li`\n    display: inline; \n    margin: 0 2em;\n\n    @media screen and (max-width: 400px) {\n        padding: 1em 0;\n        text-align: center;\n        display: block;\n    }\n`\n\n\n\n\nfunction Header() {\n    return(\n        <NavWrap>\n            <Navbar>\n                <Li><a href=\"#om-mig\">Om mig</a></Li>\n                <Li><a href=\"#cv\">CV</a></Li>\n                <Li><a href=\"#contact\">Kontakt</a></Li>\n            </Navbar>\n        </NavWrap>\n    )\n}\nexport default Header; ","import React from 'react';\nimport styled from 'styled-components';\nimport jag from './jag.png'\n\nconst MainWrap = styled.div`\n    padding: 4em 6em; \n    display: grid;\n    grid-template-columns: 1fr 1fr; \n    column-gap: 8rem;\n    height: 450px; \n\n    @media screen and (max-width: 400px) {\n    display: flex;\n    flex-direction: column;\n    padding: 2em 1em;\n    \n    }\n`\n\nfunction Main() {\n    return(\n        <MainWrap>\n            <div className=\"content\">\n                <h1 id=\"om-mig\" className=\"hover\">Christoffer Rydeståhl</h1>\n                <p>Efter ett frilansuppdrag som copywriter upptäckte jag programmeringens utlovade rike - här vill jag stanna! <br></br> \n                Min bana som Frontend utvecklare startade för snart ett år sedan. Vilket betyder att jag fortfarande har en bit kvar innan jag kan kalla mig för ett riktigt proffs.<br></br>\n                    <br></br>    \n                    Idag praktiserar jag på Jetshop i Göteborg, där jag dagligen jobbar med JavaScript, HTML, CSS3, och Git. Praktiken avslutas i maj.<br></br>     \n                    <br></br>    \n                Även om jag har mycket kvar att lära tror jag att jag skulle kunna gör nytta hos er då jag är en stark idéspruta med possetiv energi och stor vilja att lära. Dessutom är min bakgrund som copywriter en passande egenskap i vårt contenttörstande samhälle. \n                </p>\n            </div>\n            <div className=\"img\">\n                <img src={jag} id=\"jag\" alt=\"Christoffer Rydeståhl\"></img>\n            </div>\n        </MainWrap>\n    )\n}\n\nexport default Main; ","import React from 'react';\nimport styled from 'styled-components';\n\nconst Resume = styled.div`\n    padding: 1em 6em; \n    display: grid;\n    grid-template-columns: 1fr 1fr; \n    column-gap: 8rem;\n\n    @media screen and (max-width: 400px) {\n        display: flex;\n        flex-direction: column;\n        margin-top: 0;\n        padding: 4em 2em;\n        \n        }\n`\n\nfunction Cv() {\n    return(\n        <div>        \n        <Resume>\n                <h1 className=\"hover title\">CV</h1><br></br>    \n                <div className=\"cv\">                                \n                    <p><strong><h2 className=\"hover\">Jetshop, Göteborg</h2></strong><h4 className=\"hover\">Praktik: Frontend utvecklare\n                        december 2018 – pågående</h4>\n                        Här jobbar jag dagligen med Javascript, jQuery, CSS, Sass och html.<br></br><br></br> \n                        <strong><h2 className=\"hover\">Demando, distans</h2></strong><h4 className=\"hover\">Copywriter\n                        maj 2018 - pågående</h4>\n                        Som skribent för Demandos blogg håller jag mig uppdaterad med allt det senaste inom tech. \n                        <strong><h2 className=\"hover\">Sneaky Steve, Göteborg</h2></strong><h4 className=\"hover\"> Copywriter\n                        maj 2017 - april 2019</h4>\n                        Här har jag skrivit allt från annonstexter till nyhetsbrev och kollektions koncept.\n                        <strong><h2 className=\"hover\">Sneaky Steve, Landvetter flygplats</h2></strong>  <h4 className=\"hover\">Store Manager 2016 - augusti 2018</h4>\n                        Här hade jag ansvar för butik och personal.\n                        </p><br></br>        \n                    </div>    \n                    <div className=\"right\">                                               \n                        <h2 className=\"hover\">Språk och tekniker jag behärskar</h2><br></br>    \n                            <img className=\"logo\" src=\"https://cdn.worldvectorlogo.com/logos/html-5.svg\" alt=\"html5\"></img>\n                            <img className=\"logo\" src=\"https://cdn.worldvectorlogo.com/logos/css-5.svg\" alt=\"css3\"></img>\n                            <img className=\"logo\"src=\"https://cdn.worldvectorlogo.com/logos/javascript-4.svg\" alt=\"js\"></img>\n                            <img className=\"logo react\" src=\"https://cdn.worldvectorlogo.com/logos/react.svg\" alt=\"react\"></img>\n                    </div>                        \n            </Resume>    \n        </div>\n    )\n}\n\nexport default Cv; ","import React from 'react'; \nimport styled from 'styled-components';\n\nconst ContactWrap = styled.div`\n    padding: 2em 6em; \n    display: grid;\n    grid-template-columns: 1fr 1fr; \n    column-gap: 8rem;\n    \n     @media screen and (max-width: 400px) {\n    display: flex;\n    flex-direction: column;\n    padding: 1em 2em;\n    }\n`\nfunction Contact() {\n    return(\n        <ContactWrap>\n            <div>\n            <h1 id=\"contact\"className=\"hover\">Kontakta mig!</h1>\n                <p>Om ni är sugna på att ses är det bara att ringa mig på <a href=\"tel:0736926360\">0736926360</a>, eller varför inte dra iväg ett <a href=\"mailto: kristoffer@oholics.com\">mail!</a></p>\n            <h2 className=\"hover\">Personuppgifter</h2>\n            <p>Personnummer: 198604274095</p>\n            <p>Sågliderna 15, 43854 Hindås</p>\n            </div>\n        </ContactWrap>\n    )\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Cv from './CV';\nimport Contact from './Contact'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        \n        <Main />     \n        <Cv />\n        <Contact />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["jag.png","Main.js","CV.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MainWrap","styled","div","_templateObject","Main","react_default","a","createElement","className","id","src","jag","alt","Resume","CV_templateObject","Cv","ContactWrap","Contact_templateObject","Contact","href","App","src_Main","CV","src_Contact","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.89a63f82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jag.1a5977e9.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport jag from './jag.png'\n\nconst MainWrap = styled.div`\n    max-width: 1170px;\n    padding: 4em 6em; \n    display: grid;\n    grid-template-columns: 1fr 1fr; \n    column-gap: 8rem;\n    height: auto; \n\n    @media screen and (max-width: 450px) {\n    display: flex;\n    flex-direction: column;\n    padding: 2em 1em;\n    \n    }\n`\n\nfunction Main() {\n    return(\n        <MainWrap className=\"fade-text\">\n            <div className=\"content\">\n                <h1 id=\"om-mig\">Christoffer Rydeståhl</h1>\n                <p className=\"text\">Under många år satsade jag helhjärtat på musiken. Jag vår låtskrivare och sångare i ett band som hette Oholics. Tillsammans drev vi eget skivbolag, släppte två album och en ep, vi åkte på turneér runt om i Europa och Nordamerika. \n                Även om vi var världens bästa band var det tyvärr inte så många som förstod det, vilket fick mig att inse att jag kanske aldrig skulle bli någon yrkesmusiker.<br></br><br></br> \n\n                Under min tid i bandet jobbade jag extra som säljare i skobutiken Sneaky Steve på magasinsgatan i Göteborg. Här blev jag erbjuden en tjänst som butikschef vilket jag tackade ja till. \n    \n                I min roll som butikschef ingick det bl a att skriva nyhetsbrev och annan användbar content som skulle användas på hemsidan eller i kampanjer. <br></br><br></br>\n\n                Med tiden blev skrivandet en allt viktigare del i mitt arbete vilket ledde till att jag så småningom blev copywriter på Sneaky Steve. Jag började även att ta frilansuppdrag vid sidan av. <br></br><br></br>\n\n                Genom just ett frilansuppdrag upptäckte jag programmeringens utlovade rike. I uppdraget ingick det att skriva artiklar som rörde tech-industrin. Detta var ett ämne som fullständigt golvade mig vilket ledde till att kvällar och helger gick åt till att bemästra grunderna i programmering. Till en början använde jag mig av tutorials på youtube för att lära mig, men gick senare vidare till kursplattformen Team Treehouse. <br></br><br></br>\n\n                Via Sneaky Steve hade jag en kontakt på e-handelsföretaget Jetshop. För honom berättade jag om mitt nya intresse varpå jag fick ett erbjudande om att få praktisera hos dem.<br></br> <br></br>\n\n                Hos Jetshop praktiserar jag nu som frontend-utvecklare. Praktiken startade december 2018 och avslutas sista maj detta året. \n                </p>\n            </div>\n            <div className=\"img\">\n                <img src={jag} id=\"jag\" alt=\"Christoffer Rydeståhl\"></img>\n            </div>\n        </MainWrap>\n    )\n}\n\nexport default Main; ","import React from 'react';\nimport styled from 'styled-components';\n\nconst Resume = styled.div`\n    max-width: 1170px;\n    padding: 1em 6em; \n    display: grid;\n    grid-template-columns: 1fr 1fr; \n    column-gap: 8rem;\n\n    @media screen and (max-width: 450px) {\n        display: flex;\n        flex-direction: column;\n        margin-top: 0;\n        padding: 2em 2em;\n        }\n\n    @media screen and (max-width: 874px) {\n        /* margin-top: 44px; */\n    }    \n            \n`\n\nfunction Cv() {\n    return(\n        <div>        \n            <Resume className=\"fade-text\">\n                <h1 className=\"title\">CV</h1><br></br>    \n                <div className=\"cv\">                                \n                    <p><strong><h2 className=\"hover\">Jetshop, Göteborg</h2></strong><h4 className=\"hover\">Praktik: Frontend utvecklare\n                        december 2018 – pågående</h4>\n                        Här jobbar jag dagligen med Javascript, jQuery, CSS, Sass och html.<br></br><br></br> \n                        <strong><h2 className=\"hover\">Demando, distans</h2></strong><h4 className=\"hover\">Copywriter\n                        maj 2018 - pågående</h4>\n                        Som skribent för Demandos blogg håller jag mig uppdaterad med allt det senaste inom tech. \n                        <strong><h2 className=\"hover\">Sneaky Steve, Göteborg</h2></strong><h4 className=\"hover\"> Copywriter\n                        maj 2017 - april 2019</h4>\n                        Här har jag skrivit allt från annonstexter till nyhetsbrev och kollektions koncept.\n                        <strong><h2 className=\"hover\">Sneaky Steve, Landvetter flygplats</h2></strong>  <h4 className=\"hover\">Store Manager 2016 - augusti 2018</h4>\n                        Här hade jag ansvar för butik och personal.\n                        </p><br></br>        \n                    </div>    \n                    <div className=\"right\">                                               \n                    <h2 id=\"sprak\" className=\"hover\">Språk och tekniker jag behärskar</h2><br></br>  \n                        <div className=\"logo-wrapper\">  \n                            <img className=\"logo\" src=\"https://cdn.worldvectorlogo.com/logos/html-5.svg\" alt=\"html5\"></img>\n                            <img className=\"logo\" src=\"https://cdn.worldvectorlogo.com/logos/css-5.svg\" alt=\"css3\"></img>\n                            <img className=\"logo\"src=\"https://cdn.worldvectorlogo.com/logos/javascript-4.svg\" alt=\"js\"></img>\n                            <img className=\"logo react\" src=\"https://cdn.worldvectorlogo.com/logos/react.svg\" alt=\"react\"></img>\n                        </div>\n                    </div>                        \n            </Resume>    \n        </div>\n    )\n}\n\nexport default Cv; ","import React from 'react'; \nimport styled from 'styled-components';\n\nconst ContactWrap = styled.div`\n    max-width: 1170px;\n    padding: 2em 6em; \n    display: grid;\n    grid-template-columns: 1fr 1fr; \n    column-gap: 8rem;\n    \n     @media screen and (max-width: 450px) {\n    display: flex;\n    flex-direction: column;\n    padding: 1em 2em;\n    }\n`\nfunction Contact() {\n    return(\n        <ContactWrap className=\"fade-text\">\n            <div>\n                <h1 id=\"contact\">Kontakta mig!</h1>\n                <p>Om ni är sugna på att ses är det bara att ringa mig på <a href=\"tel:0736926360\">0736926360</a>, eller varför inte dra iväg ett <a href=\"mailto: kristoffer@oholics.com\">mail!</a></p>\n            <h2 className=\"hover\">Personuppgifter</h2>\n            <p>Personnummer: 1986-04-27</p>\n            <p>Sågliderna 15, 43854 Hindås</p>\n            </div>\n        </ContactWrap>\n    )\n}\n\nexport default Contact;\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './Main';\nimport Cv from './CV';\nimport Contact from './Contact'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Main />     \n        <Cv />\n        <Contact />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}